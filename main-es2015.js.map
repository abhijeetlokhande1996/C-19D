{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chart-maker/chart-maker.component.ts","./src/app/chart-maker/chart-maker.component.html","./src/app/continent-wise-graph/continent-wise-graph.component.ts","./src/app/continent-wise-graph/continent-wise-graph.component.html","./src/app/india-stat/india-stat.component.ts","./src/app/india-stat/india-stat.component.html","./src/app/models/continent-country-mapping.ts","./src/app/models/covid-data.ts","./src/app/quick-fact/quick-fact.component.ts","./src/app/quick-fact/quick-fact.component.html","./src/app/services/continent-country.service.ts","./src/app/services/covid-data.service.ts","./src/app/services/python.service.ts","./src/app/table-maker/table-maker.component.ts","./src/app/table-maker/table-maker.component.html","./src/app/world-stat/world-stat.component.ts","./src/app/world-stat/world-stat.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { PythonService } from './services/python.service';\nimport { take } from 'rxjs/operators';\nimport { CovidDataService } from './services/covid-data.service';\nimport { CovidData } from './models/covid-data';\nimport { ContinentCountryService } from './services/continent-country.service';\nimport { ContinentCountryMapping } from './models/continent-country-mapping';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'Covid19Dashboard';\n  constructor(\n    private pythonService: PythonService,\n    private covidDataService: CovidDataService,\n    private continentCountryService: ContinentCountryService\n  ) {}\n  ngOnInit(): void {\n    this.pythonService\n      .getAggredatedData()\n\n      .subscribe((aggData) => {\n        const covidDataModel = new CovidData();\n        covidDataModel.aggData = aggData;\n\n        this.covidDataService.setCovidData(covidDataModel);\n      });\n    this.pythonService\n      .getCountryRegionMappingData()\n\n      .subscribe((data) => {\n        const model = new ContinentCountryMapping();\n        model.mapping = data;\n\n        this.continentCountryService.setContinentCountryModel(model);\n      });\n  }\n}\n","<div class=\"jumbotron\">\n  <h1>Covid-19 Quick Stats</h1>\n  <p class=\"Source Title ml-5\">\n    Designed & Developed by <span class=\"text-success\">Abhijeet Lokhande</span>\n  </p>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-4 col-sm-12\">\n      <app-quick-fact></app-quick-fact>\n    </div>\n    <div class=\"col-md-8 col-sm-12\">\n      <app-world-stat></app-world-stat>\n    </div>\n  </div>\n  <div class=\"row mt-5 ml-2\">\n    <div class=\"col-md-12 col-sm-12\">\n      <app-continent-wise-stat></app-continent-wise-stat>\n    </div>\n  </div>\n  <div class=\"row mt-5 ml-2\">\n    <div class=\"col-md-12 col-sm-12\">\n      <app-india-stat></app-india-stat>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WorldStatComponent } from './world-stat/world-stat.component';\nimport { TableModule } from 'primeng/table';\nimport { QuickFactComponent } from './quick-fact/quick-fact.component';\nimport { ContinentWiseStatComponent } from './continent-wise-graph/continent-wise-graph.component';\nimport { FormsModule } from '@angular/forms';\nimport { ChartMakerComponent } from './chart-maker/chart-maker.component';\nimport { ChartModule } from 'primeng/chart';\nimport { TableMakerComponent } from './table-maker/table-maker.component';\nimport { IndiaStatComponent } from './india-stat/india-stat.component';\n\nimport { FusionChartsModule } from 'angular-fusioncharts';\nimport * as FusionCharts from 'fusioncharts';\nimport * as charts from 'fusioncharts/fusioncharts.charts';\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nimport * as world from 'fusioncharts/maps/fusioncharts.world';\nimport * as india from 'fusioncharts/maps/fusioncharts.india';\n\nimport * as usa from 'fusioncharts/maps/fusioncharts.usa';\n\nFusionChartsModule.fcRoot(FusionCharts, charts, FusionTheme, world, india, usa);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WorldStatComponent,\n    QuickFactComponent,\n    ContinentWiseStatComponent,\n    ChartMakerComponent,\n    TableMakerComponent,\n    IndiaStatComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    TableModule,\n    FormsModule,\n    ChartModule,\n    FusionChartsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-chart-maker',\n  templateUrl: './chart-maker.component.html',\n  styleUrls: ['./chart-maker.component.css'],\n})\nexport class ChartMakerComponent implements OnInit {\n  @Input('chartType') chartType: string;\n  @Input('chartData') chartData: {};\n  @Input('chartOptions') chartOptions: {};\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p-chart\n  [type]=\"chartType\"\n  [data]=\"chartData\"\n  [options]=\"chartOptions\"\n></p-chart>\n","import { Component, OnInit } from '@angular/core';\nimport { ContinentCountryService } from '../services/continent-country.service';\nimport { exhaustMap } from 'rxjs/operators';\nimport { CovidDataService } from '../services/covid-data.service';\nimport { CovidData } from '../models/covid-data';\nimport { ContinentCountryMapping } from '../models/continent-country-mapping';\n\nexport interface DataForTable {\n  countryName: string;\n  confirmed: number;\n  recovered: number;\n  deaths: number;\n  mortalityRate: string;\n}\n@Component({\n  selector: 'app-continent-wise-stat',\n  templateUrl: './continent-wise-graph.component.html',\n  styleUrls: ['./continent-wise-graph.component.css'],\n})\nexport class ContinentWiseStatComponent implements OnInit {\n  regionList = [];\n  finalDataShow = {};\n  selectedRegion: string = null;\n  chartData;\n  chartType;\n  chartOptions;\n\n  paramList = ['confirmed', 'recovered', 'deaths'];\n  displayTypes = ['graph', 'table'];\n  selectedParam = this.paramList[0];\n  selectedDisplay: number = 1;\n\n  recordsForTable = [];\n  totalRecordsOfTable: number = 0;\n  cols = [];\n  constructor(\n    private ccmService: ContinentCountryService,\n    private covidDataService: CovidDataService\n  ) {}\n  ngOnInit(): void {\n    this.cols = [\n      {\n        field: 'countryName',\n        header: 'Country',\n      },\n      {\n        field: 'confirmed',\n        header: 'Confirmed',\n      },\n      {\n        field: 'recovered',\n        header: 'Recovered',\n      },\n      {\n        field: 'deaths',\n        header: 'Deaths',\n      },\n      {\n        field: 'mortalityRate',\n        header: 'Mortality Rate',\n      },\n    ];\n    this.covidDataService.getCovidData().subscribe((dataC: CovidData) => {\n      this.ccmService\n        .getContinentCountryModel()\n        .subscribe((regionCountry: ContinentCountryMapping) => {\n          const fCountries: Array<string> = Object.keys(dataC.aggData);\n\n          Object.keys(regionCountry.mapping).forEach((rName) => {\n            const countryList: Array<string> = regionCountry.mapping[rName];\n\n            for (const countryName of countryList) {\n              for (const fCountry of fCountries) {\n                if (countryName.toLowerCase() == fCountry.toLowerCase()) {\n                  if (!this.finalDataShow[rName]) {\n                    this.finalDataShow[rName] = [];\n                  }\n                  this.finalDataShow[rName].push({\n                    countryName: fCountry,\n                    confirmed: dataC.aggData[fCountry]['confirmed'],\n                    recovered: dataC.aggData[fCountry]['recovered'],\n                    deaths: dataC.aggData[fCountry]['deaths'],\n                  });\n                }\n              }\n            }\n          });\n\n          this.regionList = Object.keys(this.finalDataShow);\n          this.selectedRegion = this.regionList[0];\n\n          if (!this.selectedDisplay) {\n            this.generateChartData(\n              'line',\n              this.finalDataShow[this.selectedRegion],\n              this.selectedParam\n            );\n          } else {\n            // call to table\n          }\n        });\n    });\n  }\n\n  onChangeParam() {\n    if (!this.selectedDisplay) {\n      this.generateChartData(\n        'line',\n        this.finalDataShow[this.selectedRegion],\n        this.selectedParam\n      );\n    } else {\n      // call to table\n    }\n  }\n  onChangeRegion() {\n    if (!this.selectedDisplay) {\n      this.generateChartData(\n        'line',\n        this.finalDataShow[this.selectedRegion],\n        this.selectedParam\n      );\n    } else {\n      // call to table\n      this.generateTableData(this.finalDataShow[this.selectedRegion]);\n    }\n  }\n  onChangeDisplay() {\n    if (!this.selectedDisplay) {\n      this.generateChartData(\n        'line',\n        this.finalDataShow[this.selectedRegion],\n        this.selectedParam\n      );\n    } else {\n      this.generateTableData(this.finalDataShow[this.selectedRegion]);\n    }\n  }\n  generateTableData(raw_data: Array<{}>) {\n    this.recordsForTable = [];\n    for (const item of raw_data) {\n      let mRate =\n        (item['deaths'] /\n          (item['confirmed'] + item['recovered'] + item['deaths'])) *\n        100;\n      mRate = Math.floor(mRate);\n\n      this.recordsForTable.push({\n        countryName: item['countryName'],\n        confirmed: item['confirmed'],\n        recovered: item['recovered'],\n        deaths: item['deaths'],\n        mortalityRate: mRate + '%',\n      });\n    }\n  }\n  generateChartData(type: string, raw_data: Array<{}>, param: string) {\n    if (!raw_data || raw_data.length == 0) return;\n    const labels = [];\n    const data = [];\n    const backgroundColor = [];\n\n    raw_data.forEach((item) => {\n      labels.push(item['countryName']);\n\n      data.push(item[param]);\n      backgroundColor.push(\n        '#' + ((Math.random() * 0xffffff) << 0).toString(16)\n      );\n    });\n    this.chartData = {\n      labels: labels,\n      datasets: [\n        {\n          label: `${this.selectedParam.toUpperCase()} Cases`,\n          barPercentage: 0.5,\n          barThickness: 6,\n          maxBarThickness: 12,\n          minBarLength: 2,\n          backgroundColor: backgroundColor,\n          data: data,\n        },\n      ],\n    };\n    this.chartType = type;\n\n    this.chartOptions = {\n      title: {\n        display: false,\n        fontSize: 16,\n      },\n      legend: {\n        position: 'top',\n      },\n    };\n  }\n}\n","<h1 class=\"h1\">Region Wise Stats</h1>\n<div class=\"row mt-5\">\n  <div class=\"col-md-2 col-sm-12 text-left\">\n    <div class=\"form-group\">\n      <label>Select Region</label>\n      <select\n        class=\"form form-control\"\n        [(ngModel)]=\"selectedRegion\"\n        (change)=\"onChangeRegion()\"\n      >\n        <option *ngFor=\"let r of regionList\" [value]=\"r\">{{\n          r | titlecase\n        }}</option>\n      </select>\n    </div>\n    <div class=\"form-group\" *ngIf=\"!selectedDisplay\">\n      <label>Select Parameter</label>\n      <select\n        class=\"form form-control\"\n        [(ngModel)]=\"selectedParam\"\n        (change)=\"onChangeParam()\"\n      >\n        <option *ngFor=\"let param of paramList\" [value]=\"param\">{{\n          param | titlecase\n        }}</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label>Display as</label>\n      <select\n        class=\"form form-control\"\n        [(ngModel)]=\"selectedDisplay\"\n        (change)=\"onChangeDisplay()\"\n      >\n        <option *ngFor=\"let dt of displayTypes; let i = index\" [ngValue]=\"i\">{{\n          dt | titlecase\n        }}</option>\n      </select>\n    </div>\n  </div>\n  <div class=\"col-md-10 col-sm-12 text-center\">\n    <app-chart-maker\n      *ngIf=\"!selectedDisplay\"\n      [chartType]=\"chartType\"\n      [chartData]=\"chartData\"\n      [chartOptions]=\"chartOptions\"\n    ></app-chart-maker>\n    <app-table-maker\n      *ngIf=\"selectedDisplay\"\n      [cols]=\"cols\"\n      [finalArrayToDisplay]=\"recordsForTable\"\n      [totalRecords]=\"recordsForTable.length\"\n    ></app-table-maker>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PythonService } from '../services/python.service';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-india-stat',\n  templateUrl: './india-stat.component.html',\n  styleUrls: ['./india-stat.component.css'],\n})\nexport class IndiaStatComponent implements OnInit {\n  selectedDisplay: number = 0;\n  displayType = ['graph', 'table'];\n  cols = [];\n  recordsToDispplay = [];\n  indianData = {};\n  dataSource: Object = {};\n\n  constructor(private pythonService: PythonService) {}\n\n  ngOnInit(): void {\n    this.cols = [\n      {\n        field: 'stateName',\n        header: 'State',\n      },\n      {\n        field: 'confirmed',\n        header: 'Confirmed',\n      },\n      {\n        field: 'recovered',\n        header: 'Recovered',\n      },\n      {\n        field: 'deaths',\n        header: 'Deaths',\n      },\n      {\n        field: 'mortalityRate',\n        header: 'Mortality Rate',\n      },\n    ];\n    this.pythonService\n      .getIndiaStat()\n      .pipe(take(1))\n      .subscribe((data) => {\n        if (data['success']) {\n          this.indianData = data;\n          if (this.selectedDisplay) {\n            this.generateDataForTable(data);\n          } else {\n            this.generateIndianChart(this.indianData);\n          }\n        }\n      });\n  }\n  onChangeDisplay() {\n    if (this.selectedDisplay) {\n      this.generateDataForTable(this.indianData);\n    } else {\n      // graph\n      this.generateIndianChart(this.indianData);\n    }\n  }\n  generateDataForTable(data) {\n    const mainData: Array<{}> = data['data']['regional'];\n\n    this.recordsToDispplay = [];\n    for (const item of mainData) {\n      let mRate = (item['deaths'] / item['totalConfirmed']) * 100;\n      mRate = Math.round(mRate);\n      if (!item['totalConfirmed']) {\n        mRate = 0;\n      }\n      this.recordsToDispplay.push({\n        stateName: item['loc'],\n        confirmed: item['totalConfirmed'],\n        recovered: item['discharged'],\n        deaths: item['deaths'],\n        mortalityRate: mRate + '%',\n      });\n    } // for\n  }\n  titleCase(str) {\n    str = str.toLowerCase().split(' ');\n    for (var i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  }\n  getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n  generateIndianChart(indianData) {\n    // Define the colorVariations of the angular gauge\n    const stateAndIdMapping = {\n      'Andaman And Nicobar Islands': '001',\n      'Andhra Pradesh': '002',\n      'Arunachal Pradesh': '003',\n      Assam: '004',\n      Bihar: '005',\n      Chandigarh: '006',\n      Chhattisgarh: '007',\n      'Dadra and Nagar Haveli': '008',\n      'Daman and Diu': '009',\n      Delhi: '010',\n      Goa: '011',\n      Gujarat: '012',\n      Haryana: '013',\n      'Himachal Pradesh': '014',\n      'Jammu And Kashmir': '015',\n      Jharkhand: '016',\n      Karnataka: '017',\n      Kerala: '018',\n      Lakshadweep: '019',\n      'Madhya Pradesh': '020',\n      Maharashtra: '021',\n      Manipur: '022',\n      Meghalaya: '023',\n      Mizoram: '024',\n      Nagaland: '025',\n      Odisha: '026',\n      Puducherry: '027',\n      Punjab: '028',\n      Rajasthan: '029',\n      Sikkim: '030',\n      'Tamil Nadu': '031',\n      Telangana: '036',\n      Tripura: '032',\n      'Uttar Pradesh': '033',\n      Uttarakhand: '034',\n      'West Bengal': '035',\n    };\n    const mainData: Array<{}> = indianData['data']['regional'];\n\n    const dataset = [];\n    for (const item of mainData) {\n      if (item['loc'].toLowerCase() == 'telengana') {\n        item['loc'] = 'Telangana';\n      }\n      let stateName: string = this.titleCase(item['loc']);\n      const confirmed = item['totalConfirmed'];\n\n      dataset.push({\n        id: stateAndIdMapping[stateName],\n        value: confirmed,\n        tooltext: `Confirmed : ${confirmed} {br} Recovered: ${item['discharged']} {br} Deaths: ${item['deaths']}`,\n      });\n    }\n\n    const colorRange = {\n      minvalue: '0',\n      code: '#FFE0B2',\n      gradient: '1',\n      color: [\n        {\n          minvalue: '0',\n          maxvalue: '100',\n          code: '#D0DFA3',\n        },\n\n        {\n          minvalue: '500',\n          maxvalue: '1000',\n          code: '#91AF64',\n        },\n        {\n          minvalue: '1000',\n          maxvalue: '5000',\n          code: '#A9FF8D',\n        },\n      ],\n    };\n\n    this.dataSource = {\n      chart: {\n        caption: 'State Wise Stats',\n        theme: 'fusion',\n        formatNumberScale: '0',\n        thousandSeparator: ',',\n        thousandSeparatorPosition: '2,3',\n        showLabels: '1',\n        useSNameInLabels: '0',\n        labelSepChar: ': ',\n        includeValueInLabels: '1',\n        useSNameInToolTip: '0',\n      },\n      // Aesthetics; ranges synced with the slider\n      colorrange: colorRange,\n      // Source data as JSON --> id represents countries of the world.\n      data: dataset,\n    }; // end of this.dataSource\n    console.log(this.dataSource);\n  } // end\n}\n","<h1 class=\"h1\">Covid-19 Stats of India</h1>\n<div class=\"row\">\n  <div class=\"col-md-2 col-sm-12\">\n    <div class=\"form-group\">\n      <label>Display as</label>\n      <select\n        class=\"form-control\"\n        [(ngModel)]=\"selectedDisplay\"\n        (change)=\"onChangeDisplay()\"\n      >\n        <option *ngFor=\"let dt of displayType; let i = index\" [ngValue]=\"i\">{{\n          dt | titlecase\n        }}</option>\n      </select>\n      <span\n        class=\"help-block text-success mt-2 font-italic\"\n        *ngIf=\"!selectedDisplay\"\n        >On map only confirmed cases are shown but on hover you can get full\n        details.</span\n      >\n    </div>\n  </div>\n  <div class=\"col-md-10 col-sm-12\">\n    <app-table-maker\n      *ngIf=\"selectedDisplay\"\n      [cols]=\"cols\"\n      [finalArrayToDisplay]=\"recordsToDispplay\"\n      [totalRecords]=\"recordsToDispplay.length\"\n    ></app-table-maker>\n\n    <!--\n      India Map\n    -->\n\n    <fusioncharts\n      *ngIf=\"!selectedDisplay\"\n      width=\"1000\"\n      height=\"1000\"\n      type=\"india\"\n      [dataSource]=\"dataSource\"\n    ></fusioncharts>\n  </div>\n</div>\n","export class ContinentCountryMapping {\n  mapping: {};\n  constructor() {\n    this.mapping = {};\n  }\n}\n","export class CovidData {\n  aggData: {};\n  constructor() {\n    this.aggData = {};\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CovidDataService } from '../services/covid-data.service';\nimport { CovidData } from '../models/covid-data';\n\n@Component({\n  selector: 'app-quick-fact',\n  templateUrl: './quick-fact.component.html',\n  styleUrls: ['./quick-fact.component.css'],\n})\nexport class QuickFactComponent implements OnInit {\n  totalConfirmCases: number = 0;\n  totalRecoverCases: number = 0;\n  totalDeathCases: number = 0;\n  constructor(private covidDataService: CovidDataService) {}\n\n  ngOnInit(): void {\n    this.covidDataService.getCovidData().subscribe((covidData: CovidData) => {\n      this.totalConfirmCases = 0;\n      Object.keys(covidData.aggData).forEach((countryName) => {\n        this.totalConfirmCases += covidData.aggData[countryName]['confirmed'];\n        this.totalRecoverCases += covidData.aggData[countryName]['recovered'];\n        this.totalDeathCases += covidData.aggData[countryName]['deaths'];\n      });\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col text-center\">\n    <h1>Quick Facts</h1>\n    <blockquote class=\"blockquote\">\n      <p class=\"mb-0 text-warning\">\n        {{ totalConfirmCases | number }}\n      </p>\n      <footer class=\"blockquote-footer\">\n        <cite title=\"Source Title h5\">Total Confirm Cases</cite>\n      </footer>\n    </blockquote>\n    <blockquote class=\"blockquote\">\n      <p class=\"mb-0 text-success\">\n        {{ totalRecoverCases | number }}\n      </p>\n      <footer class=\"blockquote-footer\">\n        <cite title=\"Source Title h5\">Total Recover Cases</cite>\n      </footer>\n    </blockquote>\n    <blockquote class=\"blockquote\">\n      <p class=\"mb-0 text-danger\">\n        {{ totalDeathCases | number }}\n      </p>\n      <footer class=\"blockquote-footer\">\n        <cite title=\"Source Title h5\">Total Death Cases</cite>\n      </footer>\n    </blockquote>\n    <blockquote class=\"blockquote\">\n      <p class=\"mb-0\">\n        {{ totalDeathCases / totalConfirmCases | percent }}\n      </p>\n      <footer class=\"blockquote-footer\">\n        <cite title=\"Source Title h5\">Total Mortality Rate</cite>\n      </footer>\n    </blockquote>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ContinentCountryMapping } from '../models/continent-country-mapping';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContinentCountryService {\n  private continentCountryModel = new ContinentCountryMapping();\n  private subject = new BehaviorSubject(this.continentCountryModel);\n  constructor() {}\n  setContinentCountryModel(model: ContinentCountryMapping) {\n    this.continentCountryModel = model;\n    this.subject.next(this.continentCountryModel);\n  }\n  getContinentCountryModel() {\n    return this.subject.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CovidData } from '../models/covid-data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CovidDataService {\n  private covidData = new CovidData();\n  private subject = new BehaviorSubject(this.covidData);\n  constructor() {}\n  setCovidData(model: CovidData) {\n    this.covidData = model;\n    this.subject.next(this.covidData);\n  }\n  getCovidData() {\n    return this.subject.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport configJson from './../../assets/config.json';\n@Injectable({\n  providedIn: 'root',\n})\nexport class PythonService {\n  url = configJson.pythonUrl;\n  constructor(private http: HttpClient) {}\n\n  getAggredatedData() {\n    return this.http.get(`${this.url}/getAggregatedCsv`);\n  }\n  getCountryRegionMappingData() {\n    return this.http.get(`${this.url}/getCountryRegionMapping`);\n  }\n  getIndiaStat() {\n    return this.http.get(`https://api.rootnet.in/covid19-in/stats/latest`);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-table-maker',\n  templateUrl: './table-maker.component.html',\n  styleUrls: ['./table-maker.component.css'],\n})\nexport class TableMakerComponent implements OnInit {\n  @Input('cols') cols;\n  @Input('finalArrayToDisplay') finalArrayToDisplay;\n  @Input('totalRecords') totalRecords;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p-table\n  [columns]=\"cols\"\n  [value]=\"finalArrayToDisplay\"\n  sortMode=\"multiple\"\n  [paginator]=\"true\"\n  [rows]=\"10\"\n  [responsive]=\"false\"\n  autoLayout=\"true\"\n  [totalRecords]=\"totalRecords\"\n  #dt\n>\n  <ng-template pTemplate=\"caption\">\n    <div style=\"text-align: right;\">\n      <i class=\"pi pi-search\" style=\"margin: 4px 4px 0 0;\"></i>\n      <input\n        type=\"text\"\n        pInputText\n        size=\"50\"\n        placeholder=\"Global Filter\"\n        (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\n        style=\"width: auto;\"\n      />\n    </div>\n  </ng-template>\n  <ng-template pTemplate=\"header\" let-columns>\n    <tr>\n      <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\n        {{ col.header }}\n        <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n      </th>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-user let-columns=\"columns\">\n    <tr>\n      <td *ngFor=\"let col of columns\">\n        <ng-container\n          *ngIf=\"\n            col.field == 'countryName' ||\n            col.field == 'mortalityRate' ||\n            col.field == 'stateName'\n          \"\n        >\n          {{ user[col.field] }}\n        </ng-container>\n        <ng-container\n          *ngIf=\"\n            col.field != 'countryName' &&\n            col.field != 'mortalityRate' &&\n            col.field !== 'stateName'\n          \"\n        >\n          {{ user[col.field] | number }}\n        </ng-container>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { PythonService } from '../services/python.service';\nimport { CovidDataService } from '../services/covid-data.service';\nimport { CovidData } from '../models/covid-data';\nimport { Subscription } from 'rxjs';\n\nexport interface AggregatedData {\n  countryName: string;\n  confirmed: number;\n  recovered: number;\n  deaths: number;\n  mortalityRate: number;\n  id: number;\n}\n@Component({\n  selector: 'app-world-stat',\n  templateUrl: './world-stat.component.html',\n  styleUrls: ['./world-stat.component.css'],\n})\nexport class WorldStatComponent implements OnInit, OnDestroy {\n  finalArrayToDisplay = [];\n  totalRecords: number = 0;\n  covidDataSubscription = new Subscription();\n  cols = [];\n  constructor(private covidDataService: CovidDataService) {}\n\n  ngOnInit(): void {\n    this.cols = [\n      {\n        field: 'id',\n        header: 'Sr No.',\n      },\n      {\n        field: 'countryName',\n        header: 'Country',\n      },\n      {\n        field: 'confirmed',\n        header: 'Confirmed',\n      },\n      {\n        field: 'recovered',\n        header: 'Recovered',\n      },\n      {\n        field: 'deaths',\n        header: 'Deaths',\n      },\n      {\n        field: 'mortalityRate',\n        header: 'Mortality Rate',\n      },\n    ];\n    this.covidDataSubscription = this.covidDataService\n      .getCovidData()\n      .subscribe((covidDataModel: CovidData) => {\n        console.log(covidDataModel);\n        const data = covidDataModel.aggData;\n        Object.keys(data).forEach((countryName, idx) => {\n          let mRate =\n            (data[countryName]['deaths'] /\n              (data[countryName]['confirmed'] +\n                data[countryName]['recovered'] +\n                data[countryName]['deaths'])) *\n            100;\n          mRate = Math.floor(mRate);\n          this.finalArrayToDisplay.push({\n            id: idx + 1,\n            countryName: countryName,\n            confirmed: data[countryName]['confirmed'],\n            recovered: data[countryName]['recovered'],\n            deaths: data[countryName]['deaths'],\n            mortalityRate: mRate + '%',\n          });\n        });\n        this.totalRecords = this.finalArrayToDisplay.length;\n      });\n  } // ngOnInit\n  ngOnDestroy(): void {\n    this.covidDataSubscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col\">\n    <h1>World Covid-19 Stats</h1>\n    <p-table\n      [columns]=\"cols\"\n      [value]=\"finalArrayToDisplay\"\n      sortMode=\"multiple\"\n      [paginator]=\"true\"\n      [rows]=\"10\"\n      [responsive]=\"false\"\n      autoLayout=\"true\"\n      [totalRecords]=\"totalRecords\"\n      #dt\n    >\n      <ng-template pTemplate=\"caption\">\n        <div style=\"text-align: right;\">\n          <i class=\"pi pi-search\" style=\"margin: 4px 4px 0 0;\"></i>\n          <input\n            type=\"text\"\n            pInputText\n            size=\"50\"\n            placeholder=\"Global Filter\"\n            (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\n            style=\"width: auto;\"\n          />\n        </div>\n      </ng-template>\n      <ng-template pTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\n            {{ col.header }}\n            <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"body\" let-user let-columns=\"columns\">\n        <tr>\n          <td *ngFor=\"let col of columns\">\n            <ng-container\n              *ngIf=\"col.field == 'countryName' || col.field == 'mortalityRate'\"\n            >\n              {{ user[col.field] }}\n            </ng-container>\n            <ng-container\n              *ngIf=\"col.field != 'countryName' && col.field != 'mortalityRate'\"\n            >\n              {{ user[col.field] | number }}\n            </ng-container>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}