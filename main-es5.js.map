{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chart-maker/chart-maker.component.ts","webpack:///src/app/chart-maker/chart-maker.component.html","webpack:///src/app/continent-wise-graph/continent-wise-graph.component.ts","webpack:///src/app/continent-wise-graph/continent-wise-graph.component.html","webpack:///src/app/india-stat/india-stat.component.ts","webpack:///src/app/india-stat/india-stat.component.html","webpack:///src/app/models/continent-country-mapping.ts","webpack:///src/app/models/covid-data.ts","webpack:///src/app/quick-fact/quick-fact.component.ts","webpack:///src/app/quick-fact/quick-fact.component.html","webpack:///src/app/services/continent-country.service.ts","webpack:///src/app/services/covid-data.service.ts","webpack:///src/app/services/python.service.ts","webpack:///src/app/table-maker/table-maker.component.ts","webpack:///src/app/table-maker/table-maker.component.html","webpack:///src/app/world-stat/world-stat.component.ts","webpack:///src/app/world-stat/world-stat.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","routes","AppRoutingModule","forRoot","imports","AppComponent","pythonService","covidDataService","continentCountryService","title","getAggredatedData","subscribe","aggData","covidDataModel","setCovidData","getCountryRegionMappingData","data","model","mapping","setContinentCountryModel","selector","templateUrl","styleUrls","fcRoot","AppModule","declarations","providers","bootstrap","ChartMakerComponent","ContinentWiseStatComponent","ccmService","regionList","finalDataShow","selectedRegion","paramList","displayTypes","selectedParam","selectedDisplay","recordsForTable","totalRecordsOfTable","cols","field","header","getCovidData","dataC","getContinentCountryModel","regionCountry","fCountries","forEach","rName","countryList","countryName","fCountry","toLowerCase","push","confirmed","recovered","deaths","generateChartData","generateTableData","raw_data","item","mRate","Math","floor","mortalityRate","type","param","length","labels","backgroundColor","random","toString","chartData","datasets","label","toUpperCase","barPercentage","barThickness","maxBarThickness","minBarLength","chartType","chartOptions","display","fontSize","legend","position","onChangeRegion","onChangeDisplay","IndiaStatComponent","displayType","recordsToDispplay","indianData","dataSource","getIndiaStat","pipe","generateDataForTable","generateIndianChart","mainData","round","stateName","str","split","i","charAt","slice","join","letters","color","stateAndIdMapping","Assam","Bihar","Chandigarh","Chhattisgarh","Delhi","Goa","Gujarat","Haryana","Jharkhand","Karnataka","Kerala","Lakshadweep","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Puducherry","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","dataset","titleCase","value","tooltext","colorRange","minvalue","gradient","maxvalue","chart","caption","theme","formatNumberScale","thousandSeparator","thousandSeparatorPosition","showLabels","useSNameInLabels","labelSepChar","includeValueInLabels","useSNameInToolTip","colorrange","console","log","ContinentCountryMapping","CovidData","QuickFactComponent","totalConfirmCases","totalRecoverCases","totalDeathCases","covidData","ContinentCountryService","continentCountryModel","subject","next","asObservable","providedIn","CovidDataService","PythonService","http","url","pythonUrl","get","TableMakerComponent","WorldStatComponent","finalArrayToDisplay","totalRecords","covidDataSubscription","idx","unsubscribe","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { PythonService } from './services/python.service';\nimport { take } from 'rxjs/operators';\nimport { CovidDataService } from './services/covid-data.service';\nimport { CovidData } from './models/covid-data';\nimport { ContinentCountryService } from './services/continent-country.service';\nimport { ContinentCountryMapping } from './models/continent-country-mapping';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'Covid19Dashboard';\n  constructor(\n    private pythonService: PythonService,\n    private covidDataService: CovidDataService,\n    private continentCountryService: ContinentCountryService\n  ) {}\n  ngOnInit(): void {\n    this.pythonService\n      .getAggredatedData()\n\n      .subscribe((aggData) => {\n        const covidDataModel = new CovidData();\n        covidDataModel.aggData = aggData;\n\n        this.covidDataService.setCovidData(covidDataModel);\n      });\n    this.pythonService\n      .getCountryRegionMappingData()\n\n      .subscribe((data) => {\n        const model = new ContinentCountryMapping();\n        model.mapping = data;\n\n        this.continentCountryService.setContinentCountryModel(model);\n      });\n  }\n}\n","<div class=\"jumbotron\">\n  <h1>Covid-19 Quick Stats</h1>\n  <p class=\"Source Title ml-5\">\n    Designed & Developed by <span class=\"text-success\">Abhijeet Lokhande</span>\n  </p>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-4 col-sm-12\">\n      <app-quick-fact></app-quick-fact>\n    </div>\n    <div class=\"col-md-8 col-sm-12\">\n      <app-world-stat></app-world-stat>\n    </div>\n  </div>\n  <div class=\"row mt-5 ml-2\">\n    <div class=\"col-md-12 col-sm-12\">\n      <app-continent-wise-stat></app-continent-wise-stat>\n    </div>\n  </div>\n  <div class=\"row mt-5 ml-2\">\n    <div class=\"col-md-12 col-sm-12\">\n      <app-india-stat></app-india-stat>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WorldStatComponent } from './world-stat/world-stat.component';\nimport { TableModule } from 'primeng/table';\nimport { QuickFactComponent } from './quick-fact/quick-fact.component';\nimport { ContinentWiseStatComponent } from './continent-wise-graph/continent-wise-graph.component';\nimport { FormsModule } from '@angular/forms';\nimport { ChartMakerComponent } from './chart-maker/chart-maker.component';\nimport { ChartModule } from 'primeng/chart';\nimport { TableMakerComponent } from './table-maker/table-maker.component';\nimport { IndiaStatComponent } from './india-stat/india-stat.component';\n\nimport { FusionChartsModule } from 'angular-fusioncharts';\nimport * as FusionCharts from 'fusioncharts';\nimport * as charts from 'fusioncharts/fusioncharts.charts';\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nimport * as world from 'fusioncharts/maps/fusioncharts.world';\nimport * as india from 'fusioncharts/maps/fusioncharts.india';\n\nimport * as usa from 'fusioncharts/maps/fusioncharts.usa';\n\nFusionChartsModule.fcRoot(FusionCharts, charts, FusionTheme, world, india, usa);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WorldStatComponent,\n    QuickFactComponent,\n    ContinentWiseStatComponent,\n    ChartMakerComponent,\n    TableMakerComponent,\n    IndiaStatComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    TableModule,\n    FormsModule,\n    ChartModule,\n    FusionChartsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-chart-maker',\n  templateUrl: './chart-maker.component.html',\n  styleUrls: ['./chart-maker.component.css'],\n})\nexport class ChartMakerComponent implements OnInit {\n  @Input('chartType') chartType: string;\n  @Input('chartData') chartData: {};\n  @Input('chartOptions') chartOptions: {};\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p-chart\n  [type]=\"chartType\"\n  [data]=\"chartData\"\n  [options]=\"chartOptions\"\n></p-chart>\n","import { Component, OnInit } from '@angular/core';\nimport { ContinentCountryService } from '../services/continent-country.service';\nimport { exhaustMap } from 'rxjs/operators';\nimport { CovidDataService } from '../services/covid-data.service';\nimport { CovidData } from '../models/covid-data';\nimport { ContinentCountryMapping } from '../models/continent-country-mapping';\n\nexport interface DataForTable {\n  countryName: string;\n  confirmed: number;\n  recovered: number;\n  deaths: number;\n  mortalityRate: string;\n}\n@Component({\n  selector: 'app-continent-wise-stat',\n  templateUrl: './continent-wise-graph.component.html',\n  styleUrls: ['./continent-wise-graph.component.css'],\n})\nexport class ContinentWiseStatComponent implements OnInit {\n  regionList = [];\n  finalDataShow = {};\n  selectedRegion: string = null;\n  chartData;\n  chartType;\n  chartOptions;\n\n  paramList = ['confirmed', 'recovered', 'deaths'];\n  displayTypes = ['graph', 'table'];\n  selectedParam = this.paramList[0];\n  selectedDisplay: number = 1;\n\n  recordsForTable = [];\n  totalRecordsOfTable: number = 0;\n  cols = [];\n  constructor(\n    private ccmService: ContinentCountryService,\n    private covidDataService: CovidDataService\n  ) {}\n  ngOnInit(): void {\n    this.cols = [\n      {\n        field: 'countryName',\n        header: 'Country',\n      },\n      {\n        field: 'confirmed',\n        header: 'Confirmed',\n      },\n      {\n        field: 'recovered',\n        header: 'Recovered',\n      },\n      {\n        field: 'deaths',\n        header: 'Deaths',\n      },\n      {\n        field: 'mortalityRate',\n        header: 'Mortality Rate',\n      },\n    ];\n    this.covidDataService.getCovidData().subscribe((dataC: CovidData) => {\n      this.ccmService\n        .getContinentCountryModel()\n        .subscribe((regionCountry: ContinentCountryMapping) => {\n          const fCountries: Array<string> = Object.keys(dataC.aggData);\n\n          Object.keys(regionCountry.mapping).forEach((rName) => {\n            const countryList: Array<string> = regionCountry.mapping[rName];\n\n            for (const countryName of countryList) {\n              for (const fCountry of fCountries) {\n                if (countryName.toLowerCase() == fCountry.toLowerCase()) {\n                  if (!this.finalDataShow[rName]) {\n                    this.finalDataShow[rName] = [];\n                  }\n                  this.finalDataShow[rName].push({\n                    countryName: fCountry,\n                    confirmed: dataC.aggData[fCountry]['confirmed'],\n                    recovered: dataC.aggData[fCountry]['recovered'],\n                    deaths: dataC.aggData[fCountry]['deaths'],\n                  });\n                }\n              }\n            }\n          });\n\n          this.regionList = Object.keys(this.finalDataShow);\n          this.selectedRegion = this.regionList[0];\n\n          if (!this.selectedDisplay) {\n            this.generateChartData(\n              'line',\n              this.finalDataShow[this.selectedRegion],\n              this.selectedParam\n            );\n          } else {\n            // call to table\n          }\n        });\n    });\n  }\n\n  onChangeParam() {\n    if (!this.selectedDisplay) {\n      this.generateChartData(\n        'line',\n        this.finalDataShow[this.selectedRegion],\n        this.selectedParam\n      );\n    } else {\n      // call to table\n    }\n  }\n  onChangeRegion() {\n    if (!this.selectedDisplay) {\n      this.generateChartData(\n        'line',\n        this.finalDataShow[this.selectedRegion],\n        this.selectedParam\n      );\n    } else {\n      // call to table\n      this.generateTableData(this.finalDataShow[this.selectedRegion]);\n    }\n  }\n  onChangeDisplay() {\n    if (!this.selectedDisplay) {\n      this.generateChartData(\n        'line',\n        this.finalDataShow[this.selectedRegion],\n        this.selectedParam\n      );\n    } else {\n      this.generateTableData(this.finalDataShow[this.selectedRegion]);\n    }\n  }\n  generateTableData(raw_data: Array<{}>) {\n    this.recordsForTable = [];\n    for (const item of raw_data) {\n      let mRate =\n        (item['deaths'] /\n          (item['confirmed'] + item['recovered'] + item['deaths'])) *\n        100;\n      mRate = Math.floor(mRate);\n\n      this.recordsForTable.push({\n        countryName: item['countryName'],\n        confirmed: item['confirmed'],\n        recovered: item['recovered'],\n        deaths: item['deaths'],\n        mortalityRate: mRate + '%',\n      });\n    }\n  }\n  generateChartData(type: string, raw_data: Array<{}>, param: string) {\n    if (!raw_data || raw_data.length == 0) return;\n    const labels = [];\n    const data = [];\n    const backgroundColor = [];\n\n    raw_data.forEach((item) => {\n      labels.push(item['countryName']);\n\n      data.push(item[param]);\n      backgroundColor.push(\n        '#' + ((Math.random() * 0xffffff) << 0).toString(16)\n      );\n    });\n    this.chartData = {\n      labels: labels,\n      datasets: [\n        {\n          label: `${this.selectedParam.toUpperCase()} Cases`,\n          barPercentage: 0.5,\n          barThickness: 6,\n          maxBarThickness: 12,\n          minBarLength: 2,\n          backgroundColor: backgroundColor,\n          data: data,\n        },\n      ],\n    };\n    this.chartType = type;\n\n    this.chartOptions = {\n      title: {\n        display: false,\n        fontSize: 16,\n      },\n      legend: {\n        position: 'top',\n      },\n    };\n  }\n}\n","<h1 class=\"h1\">Region Wise Stats</h1>\n<div class=\"row mt-5\">\n  <div class=\"col-md-2 col-sm-12 text-left\">\n    <div class=\"form-group\">\n      <label>Select Region</label>\n      <select\n        class=\"form form-control\"\n        [(ngModel)]=\"selectedRegion\"\n        (change)=\"onChangeRegion()\"\n      >\n        <option *ngFor=\"let r of regionList\" [value]=\"r\">{{\n          r | titlecase\n        }}</option>\n      </select>\n    </div>\n    <div class=\"form-group\" *ngIf=\"!selectedDisplay\">\n      <label>Select Parameter</label>\n      <select\n        class=\"form form-control\"\n        [(ngModel)]=\"selectedParam\"\n        (change)=\"onChangeParam()\"\n      >\n        <option *ngFor=\"let param of paramList\" [value]=\"param\">{{\n          param | titlecase\n        }}</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label>Display as</label>\n      <select\n        class=\"form form-control\"\n        [(ngModel)]=\"selectedDisplay\"\n        (change)=\"onChangeDisplay()\"\n      >\n        <option *ngFor=\"let dt of displayTypes; let i = index\" [ngValue]=\"i\">{{\n          dt | titlecase\n        }}</option>\n      </select>\n    </div>\n  </div>\n  <div class=\"col-md-10 col-sm-12 text-center\">\n    <app-chart-maker\n      *ngIf=\"!selectedDisplay\"\n      [chartType]=\"chartType\"\n      [chartData]=\"chartData\"\n      [chartOptions]=\"chartOptions\"\n    ></app-chart-maker>\n    <app-table-maker\n      *ngIf=\"selectedDisplay\"\n      [cols]=\"cols\"\n      [finalArrayToDisplay]=\"recordsForTable\"\n      [totalRecords]=\"recordsForTable.length\"\n    ></app-table-maker>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PythonService } from '../services/python.service';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-india-stat',\n  templateUrl: './india-stat.component.html',\n  styleUrls: ['./india-stat.component.css'],\n})\nexport class IndiaStatComponent implements OnInit {\n  selectedDisplay: number = 0;\n  displayType = ['graph', 'table'];\n  cols = [];\n  recordsToDispplay = [];\n  indianData = {};\n  dataSource: Object = {};\n\n  constructor(private pythonService: PythonService) {}\n\n  ngOnInit(): void {\n    this.cols = [\n      {\n        field: 'stateName',\n        header: 'State',\n      },\n      {\n        field: 'confirmed',\n        header: 'Confirmed',\n      },\n      {\n        field: 'recovered',\n        header: 'Recovered',\n      },\n      {\n        field: 'deaths',\n        header: 'Deaths',\n      },\n      {\n        field: 'mortalityRate',\n        header: 'Mortality Rate',\n      },\n    ];\n    this.pythonService\n      .getIndiaStat()\n      .pipe(take(1))\n      .subscribe((data) => {\n        if (data['success']) {\n          this.indianData = data;\n          if (this.selectedDisplay) {\n            this.generateDataForTable(data);\n          } else {\n            this.generateIndianChart(this.indianData);\n          }\n        }\n      });\n  }\n  onChangeDisplay() {\n    if (this.selectedDisplay) {\n      this.generateDataForTable(this.indianData);\n    } else {\n      // graph\n      this.generateIndianChart(this.indianData);\n    }\n  }\n  generateDataForTable(data) {\n    const mainData: Array<{}> = data['data']['regional'];\n\n    this.recordsToDispplay = [];\n    for (const item of mainData) {\n      let mRate = (item['deaths'] / item['totalConfirmed']) * 100;\n      mRate = Math.round(mRate);\n      if (!item['totalConfirmed']) {\n        mRate = 0;\n      }\n      this.recordsToDispplay.push({\n        stateName: item['loc'],\n        confirmed: item['totalConfirmed'],\n        recovered: item['discharged'],\n        deaths: item['deaths'],\n        mortalityRate: mRate + '%',\n      });\n    } // for\n  }\n  titleCase(str) {\n    str = str.toLowerCase().split(' ');\n    for (var i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  }\n  getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n  generateIndianChart(indianData) {\n    // Define the colorVariations of the angular gauge\n    const stateAndIdMapping = {\n      'Andaman And Nicobar Islands': '001',\n      'Andhra Pradesh': '002',\n      'Arunachal Pradesh': '003',\n      Assam: '004',\n      Bihar: '005',\n      Chandigarh: '006',\n      Chhattisgarh: '007',\n      'Dadra and Nagar Haveli': '008',\n      'Daman and Diu': '009',\n      Delhi: '010',\n      Goa: '011',\n      Gujarat: '012',\n      Haryana: '013',\n      'Himachal Pradesh': '014',\n      'Jammu And Kashmir': '015',\n      Jharkhand: '016',\n      Karnataka: '017',\n      Kerala: '018',\n      Lakshadweep: '019',\n      'Madhya Pradesh': '020',\n      Maharashtra: '021',\n      Manipur: '022',\n      Meghalaya: '023',\n      Mizoram: '024',\n      Nagaland: '025',\n      Odisha: '026',\n      Puducherry: '027',\n      Punjab: '028',\n      Rajasthan: '029',\n      Sikkim: '030',\n      'Tamil Nadu': '031',\n      Telangana: '036',\n      Tripura: '032',\n      'Uttar Pradesh': '033',\n      Uttarakhand: '034',\n      'West Bengal': '035',\n    };\n    const mainData: Array<{}> = indianData['data']['regional'];\n\n    const dataset = [];\n    for (const item of mainData) {\n      if (item['loc'].toLowerCase() == 'telengana') {\n        item['loc'] = 'Telangana';\n      }\n      let stateName: string = this.titleCase(item['loc']);\n      const confirmed = item['totalConfirmed'];\n\n      dataset.push({\n        id: stateAndIdMapping[stateName],\n        value: confirmed,\n        tooltext: `Confirmed : ${confirmed} {br} Recovered: ${item['discharged']} {br} Deaths: ${item['deaths']}`,\n      });\n    }\n\n    const colorRange = {\n      minvalue: '0',\n      code: '#FFE0B2',\n      gradient: '1',\n      color: [\n        {\n          minvalue: '0',\n          maxvalue: '100',\n          code: '#D0DFA3',\n        },\n\n        {\n          minvalue: '500',\n          maxvalue: '1000',\n          code: '#91AF64',\n        },\n        {\n          minvalue: '1000',\n          maxvalue: '5000',\n          code: '#A9FF8D',\n        },\n      ],\n    };\n\n    this.dataSource = {\n      chart: {\n        caption: 'State Wise Stats',\n        theme: 'fusion',\n        formatNumberScale: '0',\n        thousandSeparator: ',',\n        thousandSeparatorPosition: '2,3',\n        showLabels: '1',\n        useSNameInLabels: '0',\n        labelSepChar: ': ',\n        includeValueInLabels: '1',\n        useSNameInToolTip: '0',\n      },\n      // Aesthetics; ranges synced with the slider\n      colorrange: colorRange,\n      // Source data as JSON --> id represents countries of the world.\n      data: dataset,\n    }; // end of this.dataSource\n    console.log(this.dataSource);\n  } // end\n}\n","<h1 class=\"h1\">Covid-19 Stats of India</h1>\n<div class=\"row\">\n  <div class=\"col-md-2 col-sm-12\">\n    <div class=\"form-group\">\n      <label>Display as</label>\n      <select\n        class=\"form-control\"\n        [(ngModel)]=\"selectedDisplay\"\n        (change)=\"onChangeDisplay()\"\n      >\n        <option *ngFor=\"let dt of displayType; let i = index\" [ngValue]=\"i\">{{\n          dt | titlecase\n        }}</option>\n      </select>\n      <span\n        class=\"help-block text-success mt-2 font-italic\"\n        *ngIf=\"!selectedDisplay\"\n        >On map only confirmed cases are shown but on hover you can get full\n        details.</span\n      >\n    </div>\n  </div>\n  <div class=\"col-md-10 col-sm-12\">\n    <app-table-maker\n      *ngIf=\"selectedDisplay\"\n      [cols]=\"cols\"\n      [finalArrayToDisplay]=\"recordsToDispplay\"\n      [totalRecords]=\"recordsToDispplay.length\"\n    ></app-table-maker>\n\n    <!--\n      India Map\n    -->\n\n    <fusioncharts\n      *ngIf=\"!selectedDisplay\"\n      width=\"1000\"\n      height=\"1000\"\n      type=\"india\"\n      [dataSource]=\"dataSource\"\n    ></fusioncharts>\n  </div>\n</div>\n","export class ContinentCountryMapping {\n  mapping: {};\n  constructor() {\n    this.mapping = {};\n  }\n}\n","export class CovidData {\n  aggData: {};\n  constructor() {\n    this.aggData = {};\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CovidDataService } from '../services/covid-data.service';\nimport { CovidData } from '../models/covid-data';\n\n@Component({\n  selector: 'app-quick-fact',\n  templateUrl: './quick-fact.component.html',\n  styleUrls: ['./quick-fact.component.css'],\n})\nexport class QuickFactComponent implements OnInit {\n  totalConfirmCases: number = 0;\n  totalRecoverCases: number = 0;\n  totalDeathCases: number = 0;\n  constructor(private covidDataService: CovidDataService) {}\n\n  ngOnInit(): void {\n    this.covidDataService.getCovidData().subscribe((covidData: CovidData) => {\n      this.totalConfirmCases = 0;\n      Object.keys(covidData.aggData).forEach((countryName) => {\n        this.totalConfirmCases += covidData.aggData[countryName]['confirmed'];\n        this.totalRecoverCases += covidData.aggData[countryName]['recovered'];\n        this.totalDeathCases += covidData.aggData[countryName]['deaths'];\n      });\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col text-center\">\n    <h1>Quick Facts</h1>\n    <blockquote class=\"blockquote\">\n      <p class=\"mb-0 text-warning\">\n        {{ totalConfirmCases | number }}\n      </p>\n      <footer class=\"blockquote-footer\">\n        <cite title=\"Source Title h5\">Total Confirm Cases</cite>\n      </footer>\n    </blockquote>\n    <blockquote class=\"blockquote\">\n      <p class=\"mb-0 text-success\">\n        {{ totalRecoverCases | number }}\n      </p>\n      <footer class=\"blockquote-footer\">\n        <cite title=\"Source Title h5\">Total Recover Cases</cite>\n      </footer>\n    </blockquote>\n    <blockquote class=\"blockquote\">\n      <p class=\"mb-0 text-danger\">\n        {{ totalDeathCases | number }}\n      </p>\n      <footer class=\"blockquote-footer\">\n        <cite title=\"Source Title h5\">Total Death Cases</cite>\n      </footer>\n    </blockquote>\n    <blockquote class=\"blockquote\">\n      <p class=\"mb-0\">\n        {{ totalDeathCases / totalConfirmCases | percent }}\n      </p>\n      <footer class=\"blockquote-footer\">\n        <cite title=\"Source Title h5\">Total Mortality Rate</cite>\n      </footer>\n    </blockquote>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ContinentCountryMapping } from '../models/continent-country-mapping';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContinentCountryService {\n  private continentCountryModel = new ContinentCountryMapping();\n  private subject = new BehaviorSubject(this.continentCountryModel);\n  constructor() {}\n  setContinentCountryModel(model: ContinentCountryMapping) {\n    this.continentCountryModel = model;\n    this.subject.next(this.continentCountryModel);\n  }\n  getContinentCountryModel() {\n    return this.subject.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CovidData } from '../models/covid-data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CovidDataService {\n  private covidData = new CovidData();\n  private subject = new BehaviorSubject(this.covidData);\n  constructor() {}\n  setCovidData(model: CovidData) {\n    this.covidData = model;\n    this.subject.next(this.covidData);\n  }\n  getCovidData() {\n    return this.subject.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport configJson from './../../assets/config.json';\n@Injectable({\n  providedIn: 'root',\n})\nexport class PythonService {\n  url = configJson.pythonUrl;\n  constructor(private http: HttpClient) {}\n\n  getAggredatedData() {\n    return this.http.get(`${this.url}/getAggregatedCsv`);\n  }\n  getCountryRegionMappingData() {\n    return this.http.get(`${this.url}/getCountryRegionMapping`);\n  }\n  getIndiaStat() {\n    return this.http.get(`https://api.rootnet.in/covid19-in/stats/latest`);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-table-maker',\n  templateUrl: './table-maker.component.html',\n  styleUrls: ['./table-maker.component.css'],\n})\nexport class TableMakerComponent implements OnInit {\n  @Input('cols') cols;\n  @Input('finalArrayToDisplay') finalArrayToDisplay;\n  @Input('totalRecords') totalRecords;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p-table\n  [columns]=\"cols\"\n  [value]=\"finalArrayToDisplay\"\n  sortMode=\"multiple\"\n  [paginator]=\"true\"\n  [rows]=\"10\"\n  [responsive]=\"false\"\n  autoLayout=\"true\"\n  [totalRecords]=\"totalRecords\"\n  #dt\n>\n  <ng-template pTemplate=\"caption\">\n    <div style=\"text-align: right;\">\n      <i class=\"pi pi-search\" style=\"margin: 4px 4px 0 0;\"></i>\n      <input\n        type=\"text\"\n        pInputText\n        size=\"50\"\n        placeholder=\"Global Filter\"\n        (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\n        style=\"width: auto;\"\n      />\n    </div>\n  </ng-template>\n  <ng-template pTemplate=\"header\" let-columns>\n    <tr>\n      <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\n        {{ col.header }}\n        <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n      </th>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-user let-columns=\"columns\">\n    <tr>\n      <td *ngFor=\"let col of columns\">\n        <ng-container\n          *ngIf=\"\n            col.field == 'countryName' ||\n            col.field == 'mortalityRate' ||\n            col.field == 'stateName'\n          \"\n        >\n          {{ user[col.field] }}\n        </ng-container>\n        <ng-container\n          *ngIf=\"\n            col.field != 'countryName' &&\n            col.field != 'mortalityRate' &&\n            col.field !== 'stateName'\n          \"\n        >\n          {{ user[col.field] | number }}\n        </ng-container>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { PythonService } from '../services/python.service';\nimport { CovidDataService } from '../services/covid-data.service';\nimport { CovidData } from '../models/covid-data';\nimport { Subscription } from 'rxjs';\n\nexport interface AggregatedData {\n  countryName: string;\n  confirmed: number;\n  recovered: number;\n  deaths: number;\n  mortalityRate: number;\n  id: number;\n}\n@Component({\n  selector: 'app-world-stat',\n  templateUrl: './world-stat.component.html',\n  styleUrls: ['./world-stat.component.css'],\n})\nexport class WorldStatComponent implements OnInit, OnDestroy {\n  finalArrayToDisplay = [];\n  totalRecords: number = 0;\n  covidDataSubscription = new Subscription();\n  cols = [];\n  constructor(private covidDataService: CovidDataService) {}\n\n  ngOnInit(): void {\n    this.cols = [\n      {\n        field: 'id',\n        header: 'Sr No.',\n      },\n      {\n        field: 'countryName',\n        header: 'Country',\n      },\n      {\n        field: 'confirmed',\n        header: 'Confirmed',\n      },\n      {\n        field: 'recovered',\n        header: 'Recovered',\n      },\n      {\n        field: 'deaths',\n        header: 'Deaths',\n      },\n      {\n        field: 'mortalityRate',\n        header: 'Mortality Rate',\n      },\n    ];\n    this.covidDataSubscription = this.covidDataService\n      .getCovidData()\n      .subscribe((covidDataModel: CovidData) => {\n        console.log(covidDataModel);\n        const data = covidDataModel.aggData;\n        Object.keys(data).forEach((countryName, idx) => {\n          let mRate =\n            (data[countryName]['deaths'] /\n              (data[countryName]['confirmed'] +\n                data[countryName]['recovered'] +\n                data[countryName]['deaths'])) *\n            100;\n          mRate = Math.floor(mRate);\n          this.finalArrayToDisplay.push({\n            id: idx + 1,\n            countryName: countryName,\n            confirmed: data[countryName]['confirmed'],\n            recovered: data[countryName]['recovered'],\n            deaths: data[countryName]['deaths'],\n            mortalityRate: mRate + '%',\n          });\n        });\n        this.totalRecords = this.finalArrayToDisplay.length;\n      });\n  } // ngOnInit\n  ngOnDestroy(): void {\n    this.covidDataSubscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col\">\n    <h1>World Covid-19 Stats</h1>\n    <p-table\n      [columns]=\"cols\"\n      [value]=\"finalArrayToDisplay\"\n      sortMode=\"multiple\"\n      [paginator]=\"true\"\n      [rows]=\"10\"\n      [responsive]=\"false\"\n      autoLayout=\"true\"\n      [totalRecords]=\"totalRecords\"\n      #dt\n    >\n      <ng-template pTemplate=\"caption\">\n        <div style=\"text-align: right;\">\n          <i class=\"pi pi-search\" style=\"margin: 4px 4px 0 0;\"></i>\n          <input\n            type=\"text\"\n            pInputText\n            size=\"50\"\n            placeholder=\"Global Filter\"\n            (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\n            style=\"width: auto;\"\n          />\n        </div>\n      </ng-template>\n      <ng-template pTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\n            {{ col.header }}\n            <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"body\" let-user let-columns=\"columns\">\n        <tr>\n          <td *ngFor=\"let col of columns\">\n            <ng-container\n              *ngIf=\"col.field == 'countryName' || col.field == 'mortalityRate'\"\n            >\n              {{ user[col.field] }}\n            </ng-container>\n            <ng-container\n              *ngIf=\"col.field != 'countryName' && col.field != 'mortalityRate'\"\n            >\n              {{ user[col.field] | number }}\n            </ng-container>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}